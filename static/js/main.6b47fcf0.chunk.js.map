{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","padding","position","top","left","action","required","align","App","getItem","height","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"wLAmBiBA,EAnBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OAAIA,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEpD,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEC,MAAO,WAMpB,qBAAKF,UAAU,UAAUC,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,MAAO,QAASC,gBAAiB,WAAxG,SACGX,EAAQY,QCeAC,EA7BI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAad,EAAc,EAAdA,QAC3Be,GAAwBD,GAAeA,EAAYE,OAAOC,WAAajB,EAAQgB,OAAOC,SAE5F,OACE,sBAAKX,UAAU,cAAf,UACGS,GACC,qBACET,UAAU,iBACVC,MAAO,CAAEW,gBAAiBlB,EAAQgB,QAAR,cAAyBhB,EAAQgB,OAAOG,OAAxC,QAG7BnB,EAAQC,aAAeD,EAAQC,YAAYC,OAAS,EAEjD,qBACEC,IAAKH,EAAQC,YAAY,GAAGG,KAC5BC,IAAI,qBACJC,UAAU,gBACVC,MAAO,CAAEa,WAAYL,EAAuB,MAAQ,UAItD,qBAAKT,UAAU,UAAUC,MAAO,CAAEC,MAAO,OAAQG,gBAAiB,UAAWS,WAAYL,EAAuB,MAAQ,QAAxH,SACGf,EAAQY,W,yBCoCRS,EAtDK,SAACC,GACnB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAQVC,EAAe,SAACC,GACpBA,EAAMC,iBAEN,IAAMlB,EAAOY,EAAMO,OAEfnB,EAAKV,OAAS,GAChB8B,YAAYL,EAAOD,EAAQ,CAAEd,SAG/Ba,EAAS,KAOX,OACE,uBAAMnB,UAAU,eAAe2B,SAAUL,EAAzC,UACE,uBACEtB,UAAU,gBACV4B,YAAY,oBACZV,MAAOA,EACPW,SA5Be,SAACN,GACpBJ,EAASI,EAAMO,OAAOZ,OAEtBa,YAASf,EAAOI,IA0BZO,SAAUL,IAEZ,uBAAOU,QAAQ,gBAAf,SACE,sBAAMhC,UAAU,eAAhB,SACE,cAACiC,EAAA,EAAD,CAAiBjC,UAAU,qBAG/B,uBACEkC,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHnC,MAAO,CAAEoC,QAAS,QAClBR,SAvBe,SAACN,GACpBG,YAAYL,EAAOD,EAAQ,CAAEkB,MAAOf,EAAMO,OAAOQ,MAAOhC,KAAM,MAsBnCiC,K,aAEzB,wBAAQL,KAAK,SAASlC,UAAU,cAAhC,SACE,cAACwC,EAAA,EAAD,CAAcxC,UAAU,oBCWjByC,EA3DE,SAACzB,GAChB,IAAQ0B,EAA0C1B,EAA1C0B,MAAOC,EAAmC3B,EAAnC2B,WAAYC,EAAuB5B,EAAvB4B,SAAUC,EAAa7B,EAAb6B,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACrD,EAASsD,GAAV,OAA0BF,EAAKG,OAAOC,KAAI,SAACC,EAAQC,GAAT,OAAmBD,EAAOE,YAAc3D,EAAQ0C,IACnH,qBAEEpC,UAAU,eACVC,MAAO,CACLC,MAAO8C,EAAc,QAAU,OAC/BpC,gBAAiBuC,EAAOA,OAAOtC,QAAd,cAA+BsC,EAAOA,OAAOtC,OAA7C,OALrB,eACeuC,QAgCjB,OAAKN,EAGH,sBAAK9C,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6B8C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMQ,QACnC,qBAAKtD,UAAU,gBAAf,SACG8C,EAAKG,OAAOC,KAAI,SAACC,GAAD,iBAAgBA,EAAOA,OAAOxC,kBAGnD,qBAAKX,UAAU,gBAAf,SAjCmB,WACrB,IAAMuD,EAAOC,OAAOD,KAAKV,GAEzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GACpB,IAAM1D,EAAUmD,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAalD,EAAQgB,OAAOC,SAEhD,OACE,sBAA0BV,MAAO,CAAE0D,MAAO,QAA1C,UACE,qBAAK3D,UAAU,gBAAf,SACGgD,EACG,cAAC,EAAD,CAAWtD,QAASA,IACpB,cAAC,EAAD,CAAcA,QAASA,EAASc,YAAaqC,EAASa,OAE5D,qBAAK1D,UAAU,gBAAgBC,MAAO,CAAEE,YAAa6C,EAAc,OAAS,MAAOlC,WAAYkC,EAAc,MAAQ,QAArH,SACGD,EAAmBrD,EAASsD,OAPjC,cAAiBI,OAyBlBQ,KAED,qBAAK5D,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBgB,GAAjB,IAAwBI,OAAQuB,UAdpB,yB,kDCULkB,EAlDG,WACV,MAAgC5C,mBAAS,IAAzC,mBAAON,EAAP,KAAiBmD,EAAjB,KACA,EAAgC7C,mBAAS,IAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAA0B/C,mBAAS,IAAnC,mBAAOgD,EAAP,KAAcC,EAAd,KAGM5C,EAAY,uCAAG,WAAO6C,GAAP,eAAAC,EAAA,6DACjBD,EAAE3C,iBAEI6C,EAAa,CAAC,aAAc,uCAAuC,YAAa1D,EAAU,cAAcoD,GAH7F,kBAMPO,IAAMC,IAAI,kCAAkC,CAACC,QAASH,IAN/C,OAObI,aAAaC,QAAQ,WAAW/D,GAChC8D,aAAaC,QAAQ,WAAWX,GAEhCY,OAAOC,SAASC,SAChBX,EAAS,IAXI,kDAabA,EAAS,gCAbI,0DAAH,sDAmBlB,OAEI,qBAAKlE,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,0BACA,oBAAGC,MAAO,CAACG,MAAM,QAAQ0E,QAAQ,OAAOC,SAAS,WAAYC,IAAI,IAAKC,KAAK,KAA3E,+BAAmG,uBAAnG,gBAAsH,uBAAtH,sBACA,uBAAMC,OAAO,GAAGvD,SAAUL,EAA1B,UACI,uBAAOY,KAAK,OAAOhB,MAAOP,EAAUkB,SAAU,SAACsC,GAAD,OAAML,EAAYK,EAAErC,OAAOZ,QAAQlB,UAAU,QAAQ4B,YAAY,WAAWuD,UAAQ,IAClI,uBAAOjD,KAAK,WAAWhB,MAAO6C,EAAUlC,SAAU,SAACsC,GAAD,OAAMH,EAAYG,EAAErC,OAAOZ,QAAQlB,UAAU,QAAQ4B,YAAY,WAAWuD,UAAQ,IACtI,qBAAKC,MAAM,SAAX,SACI,wBAAQlD,KAAK,SAASlC,UAAU,SAAhC,SACI,8CAGR,oBAAIA,UAAU,QAAd,SAAuBiE,aCjBhCoB,EAnBJ,WAEP,OAAIZ,aAAaa,QAAQ,YAGrB,cAAC,IAAD,CACIC,OAAO,QACPC,UAAU,uCACV5C,SAAU6B,aAAaa,QAAQ,YAC/BG,WAAYhB,aAAaa,QAAQ,YACjCI,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,KACtDC,aAAc,kBAAM,IAAIC,MAAM,yDAAyDC,UAT5C,cAAC,EAAD,KCDjDC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.6b47fcf0.chunk.js","sourcesContent":["const MyMessage = ({ message }) => {\n    if (message.attachments && message.attachments.length > 0) {\n      return (\n        <img\n          src={message.attachments[0].file}\n          alt=\"message-attachment\"\n          className=\"message-image\"\n          style={{ float: 'right' }}\n        />\n      );\n    }\n  \n    return (\n      <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50' }}>\n        {message.text}\n      </div>\n    );\n  };\n  \n  export default MyMessage;\n  ","const TheirMessage = ({ lastMessage, message }) => {\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\n  \n    return (\n      <div className=\"message-row\">\n        {isFirstMessageByUser && (\n          <div\n            className=\"message-avatar\"\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\n          />\n        )}\n        {message.attachments && message.attachments.length > 0\n          ? (\n            <img\n              src={message.attachments[0].file}\n              alt=\"message-attachment\"\n              className=\"message-image\"\n              style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\n            />\n          )\n          : (\n            <div className=\"message\" style={{ float: 'left', backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\n              {message.text}\n            </div>\n          )}\n      </div>\n    );\n  };\n  \n  export default TheirMessage;\n  ","import { useState } from 'react';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { sendMessage, isTyping } from 'react-chat-engine';\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState('');\n  const { chatId, creds } = props;\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    isTyping(props, chatId);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: '' });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        className=\"message-input\"\n        placeholder=\"Send a message...\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: 'none' }}\n        onChange={handleUpload.bind(this)}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport MessageForm from './MessageForm';\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\n    <div\n      key={`read_${index}`}\n      className=\"read-receipt\"\n      style={{\n        float: isMyMessage ? 'right' : 'left',\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\n      }}\n    />\n  ));\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\n          <div className=\"message-block\">\n            {isMyMessage\n              ? <MyMessage message={message} />\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\n          </div>\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      <div className=\"container-msg\">\n      {renderMessages()}\n      </div>\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n\n","import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n        const [username, setUsername] = useState('');\n        const [password, setPassword] = useState('');\n        const [error, setError] = useState('');\n\n\n        const handleSubmit = async (e) => {\n            e.preventDefault();\n\n            const authObject = {'Project-ID': \"0b3835fc-56c0-4a3b-8f0b-8c503c7f6574\",'User-Name': username, 'User-Secret':password};\n\n            try {\n                await axios.get('https://api.chatengine.io/chats',{headers: authObject});\n                localStorage.setItem('username',username);\n                localStorage.setItem('password',password);\n\n                window.location.reload();\n                setError('');\n            } catch (error) {\n                setError('Invalid username or password');\n            }\n\n        }\n\n\n        return (\n\n            <div className=\"wrapper\">\n                <div className=\"form\">\n                    <h1 className=\"title\">Messenger JK</h1>\n                    <p style={{color:'white',padding:'10px',position:'absolute', top:'0', left:'0'}}>For default guest <br /> login: user <br /> password: user </p>\n                    <form action=\"\" onSubmit={handleSubmit}>\n                        <input type=\"text\" value={username} onChange={(e)=> setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\n                        <input type=\"password\" value={password} onChange={(e)=> setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\n                        <div align=\"center\">\n                            <button type=\"submit\" className=\"button\">\n                                <span>Log In</span>\n                            </button>\n                        </div>\n                        <h2 className=\"error\">{error}</h2>\n                    </form>\n                </div>\n            </div>\n\n        );\n\n\n}\n\n\nexport default LoginForm;","import React from 'react';\nimport {ChatEngine} from 'react-chat-engine';\nimport ChatFeed from './components/ChatFeed.jsx';\nimport './App.css';\nimport LoginForm from './components/LoginForm.jsx';\n\nconst App =() => {\n\n    if(!localStorage.getItem('username')) return <LoginForm/>;\n\n    return (\n        <ChatEngine \n            height=\"100vh\"\n            projectID=\"0b3835fc-56c0-4a3b-8f0b-8c503c7f6574\"\n            userName={localStorage.getItem('username')}\n            userSecret={localStorage.getItem('password')}\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\n\n        />\n    );\n};\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}